# Generated by Django 5.1.6 on 2025-03-11 18:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventario', '0002_renombrar_campo_cantidad'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='inventarioalmacen',
            options={'verbose_name': 'Inventario en Almacén', 'verbose_name_plural': 'Inventarios en Almacenes'},
        ),
        migrations.AlterField(
            model_name='inventarioalmacen',
            name='cantidad',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='inventarioalmacen',
            name='producto_inventario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventarios', to='inventario.productoinventario'),
        ),
        migrations.AlterField(
            model_name='inventarioalmacen',
            name='ubicacion_almacen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventarios', to='inventario.ubicacionalmacen'),
        ),
        migrations.AlterUniqueTogether(
            name='inventarioalmacen',
            unique_together={('producto_inventario', 'ubicacion_almacen')},
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='inventario.category', verbose_name='Categoría padre')),
            ],
            options={
                'verbose_name': 'Categoría',
                'verbose_name_plural': 'Categorías',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Cantidad')),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stock mínimo')),
                ('maximum_stock', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='Stock máximo')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Item de inventario',
                'verbose_name_plural': 'Items de inventario',
                'ordering': ['product__name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('in', 'Entrada'), ('out', 'Salida'), ('adjustment', 'Ajuste')], max_length=20, verbose_name='Tipo de transacción')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cantidad')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('reference', models.CharField(blank=True, help_text='Número de factura, orden, etc.', max_length=100, verbose_name='Referencia')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventario.inventoryitem', verbose_name='Item de inventario')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_inventory_transactions', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Transacción de inventario',
                'verbose_name_plural': 'Transacciones de inventario',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('sku', models.CharField(blank=True, help_text='Código único del producto', max_length=50, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=100, verbose_name='Código de barras')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio unitario')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Imagen')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='inventario.category', verbose_name='Categoría')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventario.product', verbose_name='Producto'),
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Ubicación')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Almacén',
                'verbose_name_plural': 'Almacenes',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventario.warehouse', verbose_name='Almacén'),
        ),
        migrations.AlterUniqueTogether(
            name='inventoryitem',
            unique_together={('product', 'warehouse', 'user')},
        ),
    ]
